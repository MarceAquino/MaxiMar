import { API_ROUTES, tokenUtils } from '../config/api.js'
import { clearAllData } from './utils/clearAllData.js'
import { redirectToLogin } from './utils/redirectToLogin.js'

// Verifica si el usuario est√° autenticado y el token es v√°lido
export const requireAuth = async () => {
  console.log('üîê Verificando autenticaci√≥n...')

  // 1. ¬øHay token guardado?
  if (!tokenUtils.hasToken()) {
    console.log('‚ùå No hay token - Redirigiendo al login')
    redirectToLogin()
    return false
  }

  try {
    // 2. Verificar si el token es v√°lido en el servidor
    const response = await fetch(API_ROUTES.auth.verify, {
      headers: tokenUtils.getAuthHeaders()
    })

    if (!response.ok) {
      console.log('‚ùå Token inv√°lido - Limpiando y redirigiendo')
      clearAllData()
      redirectToLogin()
      return false
    }

    // 3. Si todo est√° bien, devolver datos del admin
    const data = await response.json()
    if (data.admin && data.admin.id) {
      console.log('‚úÖ Usuario autenticado:', data.admin.nombre)
      return data.admin
    } else {
      console.log('‚ùå Respuesta inv√°lida del servidor')
      clearAllData()
      redirectToLogin()
      return false
    }
  } catch (error) {
    console.error('‚ùå Error de conexi√≥n:', error)
    clearAllData()
    redirectToLogin()
    return false
  }
}

// Cierra sesi√≥n limpiando datos y redirigiendo
export const logout = async () => {
  // 1. Confirmar que el usuario quiere salir
  if (!confirm('¬øEst√°s seguro de que quieres cerrar sesi√≥n?')) {
    return
  }

  console.log('üö™ Cerrando sesi√≥n...')

  try {
    // 2. Avisar al servidor que cerramos sesi√≥n (opcional)
    if (tokenUtils.hasToken()) {
      await fetch(API_ROUTES.auth.logout, {
        method: 'POST',
        headers: tokenUtils.getAuthHeaders()
      })
    }
  } catch (error) {
    console.log('‚ö†Ô∏è Error al comunicar logout al servidor:', error)
    // No importa si falla, seguimos con el logout local
  }

  // 3. Limpiar todo y redirigir
  clearAllData()
  window.location.replace('/front-end/html/admin/login.html')
}
